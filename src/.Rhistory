scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 25)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 25)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
session_bold_motion_regressor$volume_session <- rep(1:(nrow(session_bold_motion_regressor)/6),
each=6)
session_motion_regressor <-  bind_rows(session_vaso_motion_regressor, session_bold_motion_regressor)
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 25)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 25)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
session_vaso_motion_regressor$volume_session <- rep(1:(nrow(session_vaso_motion_regressor)/6),
each=6)
session_bold_motion_regressor$volume_session <- rep(1:(nrow(session_bold_motion_regressor)/6),
each=6)
session_motion_regressor <-  bind_rows(session_vaso_motion_regressor, session_bold_motion_regressor)
unique(session_motion_regressor$sequence)
source('~/data/sandbox_EPI-T1w-layers/code/lib/CPP_HighRes_fMRI/src/motion_regression.R', echo=TRUE)
source('~/data/sandbox_EPI-T1w-layers/code/lib/CPP_HighRes_fMRI/src/motion_regression.R', echo=TRUE)
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 50)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 50)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
# save it
ggsave(outputName,
plot_2_save,
device="png",
path=mocoPath,
units="cm",
width=15,
height=10,
dpi=300)
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(vaso, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
# save it
ggsave(outputName,
plot_2_save,
device="png",
path=mocoPath,
units="cm",
width=15,
height=10,
dpi=300)
min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
# save it
ggsave(outputName,
plot_2_save,
device="png",
path=mocoPath,
units="cm",
width=15,
height=10,
dpi=300)
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line(size = 1) +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line() +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
# save it
ggsave(outputName,
plot_2_save,
device="png",
path=mocoPath,
units="cm",
width=15,
height=10,
dpi=300)
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line(size = .1) +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line(size = .3) +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
# save it
ggsave(outputName,
plot_2_save,
device="png",
path=mocoPath,
units="cm",
width=15,
height=10,
dpi=300)
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line(size = .4) +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line(size = .4) +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
# save it
ggsave(outputName,
plot_2_save,
device="png",
path=mocoPath,
units="cm",
width=15,
height=10,
dpi=300)
plot_xyz <- ggplot(data = subset(session_motion_regressor, motion_series == c("x", "y", "z")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_hline(yintercept=.75,
color = "red") +
geom_hline(yintercept=-.75,
color = "red") +
geom_line(size = .3) +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) - .05,
to = max(subset(session_motion_regressor, motion_series == c("x", "y", "z"))[, "motion_param"]) + .05,
by = 0.25), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_pry <- ggplot(data = subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw")),
aes(x = volume_session,
y = motion_param,
colour = motion_series,
linetype = sequence)) +
geom_hline(yintercept=0,
linetype="dashed",
color = "lightgrey") +
geom_line(size = .3) +
theme_classic() +
scale_y_continuous(limits = c(min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .001,
max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .001),
breaks = c(round(seq(from = min(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) - .01,
to = max(subset(session_motion_regressor, motion_series == c("pitch", "roll", "yaw"))[, "motion_param"]) + .01,
by = 0.005), digits = 2))) +
scale_x_continuous( limits = c(1, (nrow(session_motion_regressor)/(2*6)) + 2),
breaks = c(seq(from = 0,
to = (nrow(session_motion_regressor)/(2*6)) + 2,
by = 70)))
plot_list <- list()
# plot 1
plot_list[[1]] <- plot_xyz
# plot 2
plot_list[[2]] <- plot_pry
# put them together
plot_2_save <- do.call(grid.arrange, c(plot_list, nrow=2))
outputName <-  paste('rp_sub-pilot001_ses-007_task-visualLocalizerFingerTapping.png', sep = '')
# save it
ggsave(outputName,
plot_2_save,
device="png",
path=mocoPath,
units="cm",
width=15,
height=10,
dpi=300)
q()
